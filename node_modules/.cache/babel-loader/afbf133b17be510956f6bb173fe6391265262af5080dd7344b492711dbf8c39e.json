{"ast":null,"code":"var _jsxFileName = \"/Users/ralph/Desktop/scf/src/components/DisplaySelection/DisplaySelection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './DisplaySelection.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplaySelection = _ref => {\n  _s();\n  let {\n    selectedDisplay,\n    setSelectedDisplay,\n    distributedData,\n    filteredData,\n    setFilteredData,\n    selectedDistribution\n  } = _ref;\n  const DataDisplay = (data, selectedDisplay) => {\n    const filteredData = data.map(yearEntry => ({\n      year: yearEntry.year,\n      data: yearEntry.data.filter(item => {\n        const age = item.age;\n        if (selectedDisplay === \"25-45\") {\n          return age >= 25 && age <= 45;\n        } else if (selectedDisplay === \"19-24\") {\n          return age >= 19 && age <= 24;\n        } else if (selectedDisplay === \"0-18\") {\n          return age <= 18;\n        } else if (selectedDisplay === \"45+\") {\n          return age > 45;\n        } else {\n          return age > 45;\n        }\n        // Add more conditions for other age groups if needed\n        return false; // Return true by default if no conditions match\n      })\n    }));\n\n    return filteredData;\n  };\n  const handleDisplayChange = e => {\n    setSelectedDisplay(e.target.value);\n  };\n  useEffect(() => {\n    const newfilteredData = DataDisplay(distributedData, selectedDisplay);\n    setFilteredData(newfilteredData);\n    console.log(\"filteredData:\", newfilteredData, selectedDisplay);\n  }, [distributedData, selectedDisplay]);\n  function extractUniqueValues(data, property) {\n    return [...new Set(data.map(item => item[property]))];\n  }\n  const uniqueValues = extractUniqueValues(distributedData, selectedDistribution);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Display\",\n      children: \"Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"Display\",\n      className: \"Display\",\n      value: selectedDisplay,\n      onChange: handleDisplayChange,\n      children: Object.keys(uniqueValues).map(property => uniqueValues[property].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: `${property}-${value}`,\n        children: [property, \": \", value]\n      }, `${property}-${value}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplaySelection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DisplaySelection;\nexport default DisplaySelection;\nvar _c;\n$RefreshReg$(_c, \"DisplaySelection\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","DisplaySelection","_ref","_s","selectedDisplay","setSelectedDisplay","distributedData","filteredData","setFilteredData","selectedDistribution","DataDisplay","data","map","yearEntry","year","filter","item","age","handleDisplayChange","e","target","value","newfilteredData","console","log","extractUniqueValues","property","Set","uniqueValues","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","Object","keys","_c","$RefreshReg$"],"sources":["/Users/ralph/Desktop/scf/src/components/DisplaySelection/DisplaySelection.js"],"sourcesContent":["import React from 'react'\nimport './DisplaySelection.css'\nimport { useEffect } from 'react';\n\nconst DisplaySelection = ({selectedDisplay, setSelectedDisplay, distributedData, filteredData, setFilteredData, selectedDistribution}) => {\n  const DataDisplay = (data, selectedDisplay) => {\n    const filteredData = data.map(yearEntry => ({\n      year: yearEntry.year,\n      data: yearEntry.data.filter(item => {\n        const age = item.age;\n        if (selectedDisplay === \"25-45\") {\n          return age >= 25 && age <= 45;\n        }\n        else if (selectedDisplay === \"19-24\") {\n          return age >= 19 && age <= 24;\n        }\n        else if (selectedDisplay === \"0-18\") {\n          return age <= 18;\n        }\n        else if (selectedDisplay === \"45+\") {\n          return age > 45;\n        }\n\n        else {\n          return age > 45;\n        }\n        // Add more conditions for other age groups if needed\n        return false; // Return true by default if no conditions match\n      })\n    }));\n    return filteredData;\n  };\n\n  const handleDisplayChange = (e) => {\n    setSelectedDisplay(e.target.value);\n  }\n\n    useEffect(() => {\n    const newfilteredData = DataDisplay(distributedData, selectedDisplay);\n    setFilteredData(newfilteredData)\n    console.log(\"filteredData:\", newfilteredData, selectedDisplay)\n  }, [distributedData, selectedDisplay]);\n\n  function extractUniqueValues(data, property) {\n    return [...new Set(data.map(item => item[property]))];\n  }\n\n  const uniqueValues = extractUniqueValues(distributedData, selectedDistribution);\n\n  return (\n    <div className='display_container'>\n        <label htmlFor='Display'>Display</label>\n        <select id='Display' className='Display' value={selectedDisplay} onChange={handleDisplayChange} >\n        {Object.keys(uniqueValues).map(property => (\n          uniqueValues[property].map(value => (\n            <option key={`${property}-${value}`} value={`${property}-${value}`}>\n              {property}: {value}\n            </option>\n          ))\n        ))}\n        </select>\n        </div>\n  )\n}\n\nexport default DisplaySelection"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}