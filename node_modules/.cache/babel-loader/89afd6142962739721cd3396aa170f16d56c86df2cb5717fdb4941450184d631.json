{"ast":null,"code":"var _jsxFileName = \"/Users/ralph/Desktop/scf/src/components/DisplaySelection/DisplaySelection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './DisplaySelection.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplaySelection = _ref => {\n  _s();\n  let {\n    selectedDisplay,\n    setSelectedDisplay,\n    distributedData,\n    filteredData,\n    setFilteredData,\n    selectedDistribution\n  } = _ref;\n  const [uniqueValues, setUniqueValues] = useState([]);\n  const ageDataDisplay = (data, selectedDisplay) => {\n    const filteredData = data.map(yearEntry => ({\n      year: yearEntry.year,\n      data: yearEntry.data.filter(item => {\n        const age = item.age;\n        if (selectedDisplay === \"25-45\") {\n          return age >= 25 && age <= 45;\n        } else if (selectedDisplay === \"19-24\") {\n          return age >= 19 && age <= 24;\n        } else if (selectedDisplay === \"0-18\") {\n          return age <= 18;\n        } else if (selectedDisplay === \"45+\") {\n          return age > 45;\n        } else {\n          return age > 45;\n        }\n        // Add more conditions for other age groups if needed\n        return false; // Return true by default if no conditions match\n      })\n    }));\n\n    return filteredData;\n  };\n  const DataDisplay = (data, selectedDisplay) => {\n    const filteredData = data.map(yearEntry => ({\n      year: yearEntry.year,\n      data: yearEntry.data.filter(item => item[property] === selectedValue)\n    }));\n    return filteredData;\n  };\n  const handleDisplayChange = e => {\n    setSelectedDisplay(e.target.value);\n  };\n  useEffect(() => {\n    const newfilteredData = DataDisplay(distributedData, selectedDisplay);\n    setFilteredData(newfilteredData);\n    console.log(\"filteredData:\", newfilteredData, selectedDisplay);\n  }, [distributedData, selectedDisplay]);\n  function extractUniqueValues(data, property) {\n    const uniqueValues = [...new Set(data.flatMap(entry => entry.data.map(item => item[property])))];\n    return uniqueValues;\n  }\n  useEffect(() => {\n    if (distributedData.length > 0) {\n      const newUniqueValues = extractUniqueValues(distributedData, selectedDistribution);\n      setUniqueValues(newUniqueValues);\n      console.log(\"uniquevalues:\", newUniqueValues);\n    }\n  }, [distributedData, selectedDistribution]);\n\n  // useEffect(() => {\n  //   console.log(\"uniquevalues:\", uniqueValues);\n  // }, [uniqueValues]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Display\",\n      children: \"Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"Display\",\n      className: \"Display\",\n      value: selectedDisplay,\n      onChange: handleDisplayChange,\n      children: uniqueValues.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplaySelection, \"k1SBLbmfXWN62bsBtzqCwu9es0c=\");\n_c = DisplaySelection;\nexport default DisplaySelection;\nvar _c;\n$RefreshReg$(_c, \"DisplaySelection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DisplaySelection","_ref","_s","selectedDisplay","setSelectedDisplay","distributedData","filteredData","setFilteredData","selectedDistribution","uniqueValues","setUniqueValues","ageDataDisplay","data","map","yearEntry","year","filter","item","age","DataDisplay","property","selectedValue","handleDisplayChange","e","target","value","newfilteredData","console","log","extractUniqueValues","Set","flatMap","entry","length","newUniqueValues","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["/Users/ralph/Desktop/scf/src/components/DisplaySelection/DisplaySelection.js"],"sourcesContent":["import React from 'react'\nimport './DisplaySelection.css'\nimport { useEffect, useState } from 'react';\n\nconst DisplaySelection = ({selectedDisplay, setSelectedDisplay, distributedData, filteredData, setFilteredData, selectedDistribution}) => {\n\n  const [uniqueValues, setUniqueValues] = useState([])\n\n  const ageDataDisplay = (data, selectedDisplay) => {\n    const filteredData = data.map(yearEntry => ({\n      year: yearEntry.year,\n      data: yearEntry.data.filter(item => {\n        const age = item.age;\n        if (selectedDisplay === \"25-45\") {\n          return age >= 25 && age <= 45;\n        }\n        else if (selectedDisplay === \"19-24\") {\n          return age >= 19 && age <= 24;\n        }\n        else if (selectedDisplay === \"0-18\") {\n          return age <= 18;\n        }\n        else if (selectedDisplay === \"45+\") {\n          return age > 45;\n        }\n\n        else {\n          return age > 45;\n        }\n        // Add more conditions for other age groups if needed\n        return false; // Return true by default if no conditions match\n      })\n    }));\n    return filteredData;\n  };\n\n\n\n  const DataDisplay = (data, selectedDisplay) => {\n    const filteredData = data.map(yearEntry => ({\n      year: yearEntry.year,\n      data: yearEntry.data.filter(item => item[property] === selectedValue)\n    }));\n    return filteredData;\n  };\n\n\n  const handleDisplayChange = (e) => {\n    setSelectedDisplay(e.target.value);\n  }\n\n    useEffect(() => {\n    const newfilteredData = DataDisplay(distributedData, selectedDisplay);\n    setFilteredData(newfilteredData)\n    console.log(\"filteredData:\", newfilteredData, selectedDisplay)\n  }, [distributedData, selectedDisplay]);\n\n  function extractUniqueValues(data, property) {\n    const uniqueValues = [...new Set(data.flatMap(entry => entry.data.map(item => item[property])))];\n  return uniqueValues;\n  }\n\n  useEffect(() => {\n    if (distributedData.length > 0) {\n      const newUniqueValues = extractUniqueValues(distributedData, selectedDistribution);\n      setUniqueValues(newUniqueValues);\n      console.log(\"uniquevalues:\", newUniqueValues);\n    }\n  }, [distributedData, selectedDistribution]);\n\n\n  // useEffect(() => {\n  //   console.log(\"uniquevalues:\", uniqueValues);\n  // }, [uniqueValues]);\n\n\n  return (\n    <div className='display_container'>\n        <label htmlFor='Display'>Display</label>\n        <select id='Display' className='Display' value={selectedDisplay} onChange={handleDisplayChange} >\n    {uniqueValues.map(value => (\n      <option key={value} value={value}>\n        {value}\n      </option>\n    ))}\n        </select>\n        </div>\n  )\n}\n\nexport default DisplaySelection"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}