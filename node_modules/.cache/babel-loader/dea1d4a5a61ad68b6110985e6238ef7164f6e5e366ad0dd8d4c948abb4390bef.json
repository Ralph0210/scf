{"ast":null,"code":"var _jsxFileName = \"/Users/ralph/Desktop/scf/src/components/UnitSelection/UnitSelection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './UnitSelection.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnitSelection = _ref => {\n  _s();\n  let {\n    selectedUnit,\n    setSelectedUnit,\n    distributedData,\n    filteredData,\n    UnitData,\n    setUnitData,\n    selectedDistribution,\n    selectedData,\n    selectedDisplay\n  } = _ref;\n  const calculateByUnit = (data, selectedUnit, property) => {\n    const calculated = [];\n    for (const yearData of data) {\n      const year = yearData.year;\n      const yearDataArray = yearData.data;\n      if (selectedUnit === \"Mean\") {\n        let total = 0;\n        for (const person of yearDataArray) {\n          total += person[property];\n        }\n        const calculate = total / yearDataArray.length;\n        const formattedYearData = {\n          year: year,\n          data: yearDataArray.map(person => ({\n            ...person,\n            [property]: calculate\n          }))\n        };\n        calculated.push(formattedYearData);\n      } else if (selectedUnit === \"Median\") {\n        const sortedValues = yearDataArray.map(person => person[property]).sort((a, b) => a - b);\n        const middleIndex = Math.floor(sortedValues.length / 2);\n        let median;\n        if (sortedValues.length % 2 === 0) {\n          median = (sortedValues[middleIndex - 1] + sortedValues[middleIndex]) / 2;\n        } else {\n          median = sortedValues[middleIndex];\n        }\n        const formattedYearData = {\n          year: year,\n          data: yearDataArray.map(person => ({\n            ...person,\n            [property]: median\n          }))\n        };\n        calculated.push(formattedYearData);\n      }\n    }\n    return calculated;\n  };\n  useEffect(() => {\n    const newCalculated = calculateByUnit(filteredData, selectedUnit, selectedData);\n    setUnitData(newCalculated);\n    console.log(\"unitData:\", UnitData, selectedUnit, selectedData, selectedDisplay);\n  }, [distributedData, filteredData, selectedUnit]);\n  const handleUnitChange = event => {\n    setSelectedUnit(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"units\",\n      children: \"Unit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"units\",\n      id: \"unit\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"Mean\",\n          checked: selectedUnit === 'Mean',\n          onChange: handleUnitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this), \"Mean\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"Median\",\n          checked: selectedUnit === 'Median',\n          onChange: handleUnitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }, this), \"Median\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UnitSelection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = UnitSelection;\nexport default UnitSelection;\nvar _c;\n$RefreshReg$(_c, \"UnitSelection\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","UnitSelection","_ref","_s","selectedUnit","setSelectedUnit","distributedData","filteredData","UnitData","setUnitData","selectedDistribution","selectedData","selectedDisplay","calculateByUnit","data","property","calculated","yearData","year","yearDataArray","total","person","calculate","length","formattedYearData","map","push","sortedValues","sort","a","b","middleIndex","Math","floor","median","newCalculated","console","log","handleUnitChange","event","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/ralph/Desktop/scf/src/components/UnitSelection/UnitSelection.js"],"sourcesContent":["import React from 'react'\nimport './UnitSelection.css'\nimport { useEffect } from 'react'\n\nconst UnitSelection = ({selectedUnit, setSelectedUnit, distributedData, filteredData, UnitData, setUnitData, selectedDistribution, selectedData, selectedDisplay}) => {\n  const calculateByUnit = (data, selectedUnit, property) => {\n    const calculated = [];\n  \n    for (const yearData of data) {\n      const year = yearData.year;\n      const yearDataArray = yearData.data;\n  \n      if (selectedUnit === \"Mean\") {\n        let total = 0;\n        for (const person of yearDataArray) {\n          total += person[property];\n        }\n  \n        const calculate = total / yearDataArray.length;\n  \n        const formattedYearData = {\n          year: year,\n          data: yearDataArray.map(person => ({ ...person, [property]: calculate })),\n        };\n  \n        calculated.push(formattedYearData);\n  \n      } else if (selectedUnit === \"Median\") {\n        const sortedValues = yearDataArray.map(person => person[property]).sort((a, b) => a - b);\n        const middleIndex = Math.floor(sortedValues.length / 2);\n  \n        let median;\n        if (sortedValues.length % 2 === 0) {\n          median = (sortedValues[middleIndex - 1] + sortedValues[middleIndex]) / 2;\n        } else {\n          median = sortedValues[middleIndex];\n        }\n  \n        const formattedYearData = {\n          year: year,\n          data: yearDataArray.map(person => ({ ...person, [property]: median })),\n        };\n  \n        calculated.push(formattedYearData);\n      }\n    }\n  \n    return calculated;\n  };\n  \n\n\n    useEffect(() => {\n      const newCalculated = calculateByUnit(filteredData, selectedUnit, selectedData)\n      setUnitData(newCalculated)\n      console.log(\"unitData:\", UnitData, selectedUnit, selectedData, selectedDisplay)\n    },[distributedData, filteredData, selectedUnit])\n\n\n\n    const handleUnitChange = (event) => {\n      setSelectedUnit(event.target.value);\n    };\n\n  return (\n    <div className='unit'>\n    <label htmlFor='units'>Unit</label>\n  <div className='units' id='unit'>\n  <label>\n    <input\n    type=\"radio\"\n    value=\"Mean\"\n    checked={selectedUnit === 'Mean'}\n    onChange={handleUnitChange}\n    />\n    Mean\n  </label>\n\n  <label>\n    <input\n    type=\"radio\"\n    value=\"Median\"\n    checked={selectedUnit === 'Median'}\n    onChange={handleUnitChange}\n    />\n    Median\n </label>\n  </div>\n  </div>\n  )\n}\n\nexport default UnitSelection"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}