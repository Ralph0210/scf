{"ast":null,"code":"var _jsxFileName = \"/Users/ralph/Desktop/scf/src/components/UnitSelection/UnitSelection.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './UnitSelection.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnitSelection = _ref => {\n  _s();\n  let {\n    selectedUnit,\n    setSelectedUnit,\n    distributedData,\n    filteredData,\n    UnitData,\n    setUnitData,\n    selectedDistribution,\n    selectedData,\n    selectedDisplay\n  } = _ref;\n  const calculateByUnit = (data, selectedUnit, selectedData) => {\n    const calculated = [];\n    for (const yearData of data) {\n      const year = yearData.year;\n      const yearDataArray = yearData.data;\n      if (selectedUnit === \"Mean\") {\n        let total = 0;\n        for (const person of yearDataArray) {\n          total += person[selectedData];\n        }\n        const calculate = total / yearDataArray.length;\n        // console.log(calculate)\n        calculated.push({\n          year: year,\n          [selectedData]: calculate\n        });\n      } else {\n        console.log(\"median\");\n      }\n    }\n    return calculated;\n  };\n  useEffect(() => {\n    const newCalculated = calculateByUnit(filteredData, selectedUnit, selectedData);\n    setUnitData(newCalculated);\n    console.log(\"unitData:\", UnitData, selectedUnit, selectedData, selectedDisplay);\n  }, [distributedData, filteredData, selectedUnit]);\n  const handleUnitChange = event => {\n    setSelectedUnit(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unit\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"units\",\n      children: \"Unit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"units\",\n      id: \"unit\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"Mean\",\n          checked: selectedUnit === 'Mean',\n          onChange: handleUnitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this), \"Mean\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"Median\",\n          checked: selectedUnit === 'Median',\n          onChange: handleUnitChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), \"Median\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(UnitSelection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = UnitSelection;\nexport default UnitSelection;\nvar _c;\n$RefreshReg$(_c, \"UnitSelection\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","UnitSelection","_ref","_s","selectedUnit","setSelectedUnit","distributedData","filteredData","UnitData","setUnitData","selectedDistribution","selectedData","selectedDisplay","calculateByUnit","data","calculated","yearData","year","yearDataArray","total","person","calculate","length","push","console","log","newCalculated","handleUnitChange","event","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/ralph/Desktop/scf/src/components/UnitSelection/UnitSelection.js"],"sourcesContent":["import React from 'react'\nimport './UnitSelection.css'\nimport { useEffect } from 'react'\n\nconst UnitSelection = ({selectedUnit, setSelectedUnit, distributedData, filteredData, UnitData, setUnitData, selectedDistribution, selectedData, selectedDisplay}) => {\n\n\n  const calculateByUnit = (data, selectedUnit, selectedData) => {\n    const calculated = [];\n\n    for (const yearData of data) {\n      const year = yearData.year;\n      const yearDataArray = yearData.data;\n\n      if (selectedUnit === \"Mean\") {\n      let total = 0;\n      for (const person of yearDataArray) {\n        total += person[selectedData];\n      }\n\n      const calculate = total / yearDataArray.length;\n      // console.log(calculate)\n      calculated.push({\n        year: year,\n        [selectedData]: calculate,\n      });\n\n    } else {\n      console.log(\"median\")\n    }\n\n  }\n  return calculated\n  }\n\n\n\n    useEffect(() => {\n      const newCalculated = calculateByUnit(filteredData, selectedUnit, selectedData)\n      setUnitData(newCalculated)\n      console.log(\"unitData:\", UnitData, selectedUnit, selectedData, selectedDisplay)\n    },[distributedData, filteredData, selectedUnit])\n\n\n\n    const handleUnitChange = (event) => {\n      setSelectedUnit(event.target.value);\n    };\n\n  return (\n    <div className='unit'>\n    <label htmlFor='units'>Unit</label>\n  <div className='units' id='unit'>\n  <label>\n    <input\n    type=\"radio\"\n    value=\"Mean\"\n    checked={selectedUnit === 'Mean'}\n    onChange={handleUnitChange}\n    />\n    Mean\n  </label>\n\n  <label>\n    <input\n    type=\"radio\"\n    value=\"Median\"\n    checked={selectedUnit === 'Median'}\n    onChange={handleUnitChange}\n    />\n    Median\n </label>\n  </div>\n  </div>\n  )\n}\n\nexport default UnitSelection"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}